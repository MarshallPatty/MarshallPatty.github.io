{"version":3,"sources":["componets/Block.js","Graphic.js","Display.js","TimeBlocker.js","index.js"],"names":["convertToHours","time","data","split","Number","remap","num","min1","max1","min2","max2","paths","type","points","string","forEach","element","Block","props","size","r1","r2","startTime","endTime","title","color","path","startAngle","Math","PI","endAngle","startPos","cos","sin","endPos","innerStartPos","innerEndPos","calculatePath","textRadius","start","end","titlePath","d","fill","id","startOffset","textAnchor","href","Blocks","Graphic","updateTime","date","Date","angle","getHours","getMinutes","x1","y1","x2","y2","console","log","style","stroke","strokeWidth","setState","Time","intervalID","setTimeout","bind","state","this","clearTimeout","blocks","block","push","key","lines","i","r","x","y","width","height","xmlns","cx","cy","mask","React","Component","querystring","require","TimeBlocker","componentDidMount","querystrings","parse","window","location","search","slice","JSON","changeHandler","e","name","target","value","formData","submitHandler","preventDefault","display","alignItems","justifyContent","onSubmit","onChange","marginTop","gridTemplateColumns","gridTemplateRows","gridColumnGap","onClick","document","getElementById","stringify","cols","rows","origin","pathname","encodeURIComponent","Display","ReactDOM","render","basename","process","exact","component"],"mappings":"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","file":"static/js/main.7c71face.chunk.js","sourcesContent":["import React from 'react';\n\nfunction convertToHours(time){\n    const data = time.split(':')\n    const hours = Number(data[0]);\n    const minutes = Number(data[1]);\n    return hours + minutes / 60;\n}\n\nexport function remap(num, min1, max1, min2, max2){\n    return (num - min1) * (max2 - min2) / (max1 - min1) + min2;\n}\n\nfunction paths(type, points){\n    var string = type;\n    points.forEach(element => {\n        string += \" \" + element;\n    });\n    string += \" \";\n    return string;\n}\n\nfunction calculatePath(startTime, endTime, size, r1, r2){\n    var startAngle = remap(startTime, 0, 24, 0, 2 * Math.PI) - Math.PI / 2;\n    var endAngle = remap(endTime, 0, 24, 0, 2 * Math.PI) - Math.PI / 2;\n\n    var startPos = [size / 2 + r1 * Math.cos(startAngle), size / 2 + r1 * Math.sin(startAngle)];\n    var endPos = [size / 2 + r1 * Math.cos(endAngle), size / 2 + r1 * Math.sin(endAngle)];\n    var innerStartPos = [size / 2 + r2 * Math.cos(startAngle), size / 2 + r2 * Math.sin(startAngle)];\n    var innerEndPos = [size / 2 + r2 * Math.cos(endAngle), size / 2 + r2 * Math.sin(endAngle)];\n\n    return (\n        paths(\"M\", [innerStartPos[0], innerStartPos[1]]) + \n        paths(\"L\", [startPos[0], startPos[1]]) + \n        paths(\"A\", [r1, r1, 0, 0, 1, endPos[0], endPos[1]]) + \n        paths(\"L\", [innerEndPos[0], innerEndPos[1]]) + \n        paths(\"A\", [r2, r2, 0, 0, 0, innerStartPos[0], innerStartPos[1]])\n    );\n}\n\nexport function Block(props){\n    var size = props.size;\n    var r1 = props.r1;\n    var r2 = props.r2;\n\n    var startTime = convertToHours(props.data.startTime);\n    var endTime = convertToHours(props.data.endTime);\n    var title = props.data.title;\n    var color = props.data.color;\n    var path = calculatePath(startTime, endTime, size, r1, r2);\n    \n    const textRadius = (r1 + r2) / 2;\n    var startAngle = remap(startTime, 0, 24, 0, 2 * Math.PI) - Math.PI / 2;\n    var endAngle = remap(endTime, 0, 24, 0, 2 * Math.PI) - Math.PI / 2;\n    var start = [size / 2 + textRadius * Math.cos(startAngle), size / 2 + textRadius * Math.sin(startAngle)];\n    var end = [size / 2 + textRadius * Math.cos(endAngle), size / 2 + textRadius * Math.sin(endAngle)];\n    var titlePath = paths(\"M\", [start[0], start[1]]) + paths(\"A\", [textRadius, textRadius, 0, 0, 1, end[0], end[1]]);\n\n    return(\n        <g>\n            <path d={path} fill={color}></path>\n\n            <path d={titlePath} id={title} fill=\"none\"></path>\n            <text>\n                <textPath startOffset=\"50%\" textAnchor=\"middle\" href={'#' + title}>{title}</textPath>\n            </text>\n        </g>\n    );\n}","import React from 'react';\nimport {Block, remap} from './componets/Block';\n\nconst size = 700;\nconst r1 = size / 2;\nconst r2 = r1 * 5 / 8;\n\nexport default class Graphic extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {Time:null}\n    }\n\n    componentDidMount(){\n        this.updateTime();\n    }\n\n    componentWillUnmount(){\n        //stop the update after the componet has been unmounted\n        clearTimeout(this.intervalID);\n    }\n\n    updateTime = () => {\n        var date = new Date();\n        var angle = remap(date.getHours() + date.getMinutes() / 60, 0, 24, 0, 2 * Math.PI) - Math.PI / 2;\n        const x1 = r2 * Math.cos(angle) + size / 2, y1 = r2 * Math.sin(angle) + size / 2;\n        const x2 = r1 * Math.cos(angle) + size / 2, y2 = r1 * Math.sin(angle) + size / 2;\n        console.log(\"ANGLE\", x1, y1, x2, y2)\n        var time = <line x1={x1} y1={y1} x2={x2} y2={y2} style={{stroke:'rgb(255,0,0)', strokeWidth:2}}/>\n        this.setState({Time: time});\n        this.intervalID = setTimeout(this.updateTime.bind(this), 60000);\n    }\n\n    render(){\n        var blocks = [];\n        this.props.Blocks.forEach(block => {\n            blocks.push(<Block size={size} r1={r1} r2={r2} data={block} key={block.title}/>);\n        });\n\n        var lines = [];\n        for (let i = 0; i < 1440; i+= 5) {\n            const angle = i * 2 * Math.PI / 1440;\n            var r = 8;\n            if(i % 60 == 0) r = 15;\n\n            const x1 = r2 * Math.cos(angle) + size / 2, y1 = r2 * Math.sin(angle) + size / 2;\n            const x2 = (r2 - r) * Math.cos(angle) + size / 2, y2 = (r2 - r) * Math.sin(angle) + size / 2;\n\n            if(i % 60 == 0) lines.push(<text textAnchor=\"middle\" x={(r2 - 25) * Math.cos(angle - Math.PI / 2) + size / 2} y={(r2 - 25) * Math.sin(angle - Math.PI / 2) + size / 2}>{i / 60}</text>)\n\n            lines.push(<line x1={x1} y1={y1} x2={x2} y2={y2} style={{stroke:'rgb(0,0,0)',strokeWidth:1}} />);\n        }\n\n\n        return(\n            <svg width={size} height={size} xmlns=\"http://www.w3.org/2000/svg\">\n                <defs>\n                    <mask id=\"mask\">\n                        <rect width=\"100%\" height=\"100%\" fill=\"white\"/>\n                        <circle r={r2} cx={size / 2} cy={size / 2} />\n                    </mask>\n                </defs>\n                <circle cx={size / 2} cy={size / 2} r={r1} mask=\"url(#mask)\" fill=\"darkgray\"/>\n                {blocks}\n\n                {lines}\n                {this.state.Time}\n            </svg>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Graphic from './Graphic';\n\n\nconst querystring = require('querystring');\nvar Blocks;\nif('Blocks' in querystring.parse(window.location.search.slice(1))){\n    Blocks = JSON.parse(querystring.parse(window.location.search.slice(1)).Blocks);\n}\n\nconst Display = () => {\n    return(\n        <Graphic Blocks={Blocks} />      \n    );\n}\n\nexport default Display;","import React from 'react';\nimport Graphic from './Graphic';\n\nconst querystring = require('querystring');\n\nexport default class TimeBlocker extends React.Component{\n  \n  constructor(props){\n    super(props);\n    this.state = {Blocks: []}\n    \n    this.formData = {\n      startTime: '',\n      endTime: '',\n      title: '',\n      color: ''\n    }\n  }\n\n  componentDidMount = () => {\n    const querystrings = querystring.parse(window.location.search.slice(1))\n    if('Blocks' in querystrings) this.setState({Blocks: JSON.parse(querystrings.Blocks)})\n  }\n\n  changeHandler = e => {\n    var name = e.target.name;\n    var value = e.target.value;\n    this.formData[name] = value;\n  }\n\n  submitHandler = e => {\n    e.preventDefault();\n    var data = {\n      startTime: this.formData.startTime,\n      endTime: this.formData.endTime,\n      title: this.formData.title,\n      color: this.formData.color\n    }\n    this.setState({Blocks: [...this.state.Blocks, data]})\n  }\n\n  render(){\n    return (\n      <div style={{display:'flex', alignItems:'center', justifyContent:'space-around'}}>\n        <Graphic Blocks={this.state.Blocks}/>\n  \n        <form onSubmit={this.submitHandler}>\n          <h2>Add A Block</h2>\n          <div>\n              <label>Title: </label>\n              <input type=\"text\" name=\"title\" onChange={this.changeHandler}/>\n          </div>\n          <div>\n              <label>Start Time: </label>\n              <input type=\"time\" name=\"startTime\" onChange={this.changeHandler}/>\n          </div>\n          <div>\n              <label>End Time: </label>\n              <input type=\"time\" name=\"endTime\" onChange={this.changeHandler}/>\n          </div>\n          <div>\n              <label>Colour: </label>\n              <input type=\"color\" name=\"color\" onChange={this.changeHandler}/>\n          </div>\n          <input type=\"submit\" value=\"Add\"/>\n\n          <div style={{\n            marginTop: '20px',\n            display: 'grid',\n            gridTemplateColumns: 'repeat(2, 1fr)',\n            gridTemplateRows: 'repeat(2, 1fr)',\n            gridColumnGap: '10px'}}>\n            <button onClick={() => document.getElementById(\"output\").value = JSON.stringify(this.state.Blocks)}>Get Current Blocks</button>\n            <textarea id=\"output\" cols=\"10\" rows=\"1\"></textarea>\n            <button onClick={() => document.getElementById(\"output-url-encoded\").value = `${window.location.origin}${window.location.pathname}?Blocks=${encodeURIComponent(JSON.stringify(this.state.Blocks))}`}>Get perma link</button>\n            <textarea href='#' id=\"output-url-encoded\" cols=\"10\" rows=\"1\"></textarea>\n            <button onClick={() => this.setState({Blocks: JSON.parse(document.getElementById(\"input\").value)})}>Input Blocks</button>\n            <textarea id=\"input\" cols=\"10\" rows=\"1\"></textarea>\n          </div>\n        </form>\n      </div>      \n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport TimeBlocker from './TimeBlocker';\nimport Display from './Display';\n\n\nReactDOM.render(<BrowserRouter basename={`${process.env.PUBLIC_URL}/`}>\n  <Route exact path=\"/\" component={TimeBlocker} />\n     <Route path=\"/display\" component={Display} />\n</BrowserRouter>,document.getElementById('root'));\n"],"sourceRoot":""}